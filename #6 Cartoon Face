#include <GL/glut.h>
#include <math.h>

void display() {
	glClear(GL_COLOR_BUFFER_BIT);

	glColor3f(1.0f, 0.0f, 0.0f);
	glBegin(GL_POLYGON);
	for (int i = 0; i < 360; i++) {
		float angle = i * 3.1415926f / 180.0f;
		float x = 0.8f * cos(angle);
		float y = 0.8 * sin(angle);
		glVertex2f(x, y);
	}
	glEnd();


	// draw face face outline
	//glColor3f(1.0f, 1.0f, 1.0f);
	glColor3f(1.0, 1.0, 0.0);
	glLineWidth(3.0f);
	glBegin(GL_LINE_LOOP);
	glVertex2f(-0.8f, 0.8f);
	glVertex2f(0.8f, 0.8f);
	glVertex2f(0.8f, -0.8f);
	glVertex2f(-0.8f, -0.8f);
	glEnd();


	//draw eyes
	glColor3f(1.0f, 1.0f, 1.0f);
	glPointSize(30.0f);
	glBegin(GL_POINTS);
	glVertex2f(-0.4f, 0.4f);
	glVertex2f(0.4f, 0.4f);
	glEnd();


	//draw nose
	//glColor3f(0.0f, 1.0f, 0.0f);
	glColor3f(1.0, 1.0, 0.0);
	glBegin(GL_TRIANGLES);
	glVertex2f(0.0f, 0.2f);
	glVertex2f(-0.2f, -0.2f);
	glVertex2f(0.2f, -0.2f);
	glEnd();

	//draw mouth
	glColor3f(1.0f, 1.0f, 0.0f);
	//glColor3f(1.0f, 1.0f, 1.0f);
	glBegin(GL_LINES);
	glVertex2f(-0.2f, -0.5f);
	glVertex2f(-0.2f, -0.7f);

	glVertex2f(-0.2f, -0.7f);
	glVertex2f(0.0f, -0.5f);

	glVertex2f(0.0f, -0.5f);
	glVertex2f(0.2f, -0.7f);

	glVertex2f(0.2f, -0.7f);
	glVertex2f(0.2f, -0.5f);
	glEnd();
	glutSwapBuffers();

}

int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA);
	glutInitWindowSize(640, 480);
	glutCreateWindow("Face");
	glClearColor(0.0f, 0.0f, 0.0f, 0.0f);
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}
